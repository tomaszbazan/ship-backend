image: docker:latest
services:
  - docker:dind

stages:
  - build
  - buildImage
  - deploy

cache:
  paths:
    - .m2/repository

variables:
  DOCKER_DRIVER: overlay

  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  CONTAINER_IMAGE_LATEST: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

  SONAR_PROJECT: ship-backend
  SONAR_URL: https://sonar.bazan.tk
  SONAR_API_KEY: eed217d41226b4b5a467ebc5415c8540f1262aba

  NAMESPACE: todoistcalendar
  K8S_CONTEXT: kubernetes-admin@k8s-hetzner

  SOURCE: "/builds/tomasz.bazan.89/ship-backend/helm/"

build:
  stage: build
  image: maven:3.6.3-jdk-8-openj9
  variables:
    MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  script:
    mvn compile package sonar:sonar -Dsonar.projectKey=$SONAR_PROJECT -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_API_KEY -DskipTests
  artifacts:
    paths:
      - target/*.jar

buildImage:
  stage: buildImage
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_IMAGE_LATEST || true
    - docker build --cache-from $CONTAINER_IMAGE_LATEST --tag $CONTAINER_IMAGE --tag $CONTAINER_IMAGE_LATEST .
    - docker push $CONTAINER_IMAGE
    - docker push $CONTAINER_IMAGE_LATEST

deploy:
  stage: deploy
  image: dtzar/helm-kubectl:latest
  only:
    - master
  before_script:
    - mkdir /root/.kube
    - cp $KUBECONFIG /root/.kube/config
  script:
    - "sed -i \"s/tag: .*/tag: $CI_COMMIT_SHA/g\" $SOURCE/values.yaml"
    - DEPLOY_EXIST=$(helm list -n $NAMESPACE -q)
    - if [ -z "$DEPLOY_EXIST" ]; then kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -; fi
    - if [ -z "$DEPLOY_EXIST" ]; then kubectl create secret docker-registry regcred-gitlab --namespace=$NAMESPACE --docker-server=registry.gitlab.com --docker-username=gitlab-deploy-token --docker-password=$REPOSITORY_TOKEN; fi
    - if [ -z "$DEPLOY_EXIST" ]; then helm install $(echo "$CI_PROJECT_NAME" | awk '{print tolower($0)}') --namespace=$NAMESPACE --create-namespace $SOURCE; else helm upgrade $(echo "$CI_PROJECT_NAME" | awk '{print tolower($0)}') --namespace=$NAMESPACE --create-namespace $SOURCE; fi
